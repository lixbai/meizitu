"""
Django settings for meizitu project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'cs7*hd28=hgh@s$0*x1au)h2pa*skv=#!oh7ixd83sjc2hf9h*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']

INTERNAL_IPS = [
    # ...
    '127.0.0.1',
    # ...
]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.mzauth',
    'apps.news',
    'apps.cms',
    'apps.album',
    'apps.beauty',
    'apps.ueditor',
    'apps.ad',

    'rest_framework',
    'debug_toolbar',
    'django.contrib.sitemaps'

]


MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',#设置全站缓存的配置1
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'debug_toolbar.middleware.DebugToolbarMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',#设置全站缓存的配置2
]
# 设置全站缓存的配置3
# CACHE_MIDDLEWARE_KEY_PREFIX = ''
# CACHE_MIDDLEWARE_SECONDS = 5

# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': '127.0.0.1:11211',
#     }
# }


ROOT_URLCONF = 'meizitu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join (BASE_DIR, 'front/templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins':[
                'django.templatetags.static'
            ]
        },
    },
]

WSGI_APPLICATION = 'meizitu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'meizitu1',
        'HOST': '127.0.0.1',
        'USER': 'root',
        'PORT': '3306',
        'PASSWORD': 'uku123'

    }
}



# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# 所用到的用户模型
AUTH_USER_MODEL = 'mzauth.User'


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'front', 'dist')
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


#配置Ueditor编辑器的全局配置
# 上传新闻文章里面的图片视频的上传路径，这里是上传到本地
UEDITOR_UPLOAD_TO_SERVER = True
UEDITOR_UPLOAD_PATH = MEDIA_ROOT
UEDITOR_CONFIG_PATH = os.path.join(BASE_DIR, 'front','dist', 'ueditor', 'config.json')

# 配置阿里云OSS
# 上传 文章里面的图片视频，到阿里云 对象存储
UEDITOR_UPLOAD_TO_ALIYUN = False
ALIYUN_AccessKey_ID = ''
ALIYUN_AccessKey_Secret = ''
ALIYUN_bucket_name = ''
ALIYUN_endpoint = ''
ALIYUN_prefix_url = ''

# 配置腾讯Cos
# 上传 文章里面的图片视频，到腾讯云的对象存储
UEDITOR_UPLOAD_TO_TENCENT = False
TENCENT_secret_id = ''
TENCENT_secret_key = ''
TENCENT_bucket_name = 'li-1302251434'
TENCENT_region = 'ap-nanjing'
TENCENT_prefix_url = 'https://li-1302251434.cos.ap-nanjing.myqcloud.com'



#debug-toolbar配置
DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
    'debug_toolbar.panels.profiling.ProfilingPanel',
]


# 配置新闻功能里面的一页 几条新闻
ONE_PAGE_NEWS_COUNT = 16

# rest_framework 配置
REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_CLASSES':['utils.throttle.VisitThrottle',],
    'DEFAULT_THROTTLE_RATES':{
        # 注意这里一个点，如果系统没有设置default_cache 那么需要关闭default_cache,要不然这个函数取不到那个cache里面的值
        'meizitu':'30/m' # 针对scope 是meizitu这个类的设置访问次数和时间周期
    },
    'DEFAULT_RENDERER_CLASSES':(
        'rest_framework.renderers.JSONRenderer'
    )

}